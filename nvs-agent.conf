input {
    file {
        type => "glance"
        path => ["/data/log/glance/api.log",
                 "/data/log/glance/registry.log",
                 "/data/log/glance/scrubber.log"]
    }
    file {
        type => "keystone"
        path => "/data/log/keystone/keystone.log"
    }
    file {
        type => "nova"
        path => ["/data/log/nova/nova-consoleauth.log",
                 "/data/log/nova/nova-api.log",
                 "/data/log/nova/nova-manage.log",
                 "/data/log/nova/nova-network.log",
                 "/data/log/nova/nova-scheduler.log",
                 "/data/log/nova/nova-xvpvncproxy.log",
                 "/data/log/nova/nova-compute.log"]
    }
}

filter {
    grep {
        match => ["@message", "(INFO)|(ERROR)|(TRACE)|(WARNING)"]
    }
    grok {
        type => "nova"
        pattern => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:level} %{PROG:program} %{GREEDYDATA:message}"
    }
    grok {
        type => "glance"
        pattern => [
            "%{TIMESTAMP_ISO8601:timestamp} %{NUMBER:response} %{WORD:level} %{PROG:program} %{GREEDYDATA:message}",
            "%{TIMESTAMP_ISO8601:timestamp} %{WORD:level} %{PROG:program} %{GREEDYDATA:message}"
        ]
    }
    grok {
        type => "keystone"
        pattern => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level} \[%{PROG:program}\] %{GREEDYDATA:message}"
    }
    date {
        timestamp => "yyyy-MM-dd HH:mm:ss.SSSZ"
        timestamp => "dd-MMM-YYYY::HH:mm:ss"
        timestamp => "yyyy-MM-dd HH:mm:ss,SSS"
        timestamp => "yyyy-MM-dd HH:mm:ss.SSS"
        timestamp => "yyyy-MM-dd HH:mm:ss"
        timestamp => "EEE MMM DD HH:mm:ss YYYY"
        timestamp => "dd/MMM/yyyy:HH:mm:ss Z"
        timestamp => "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
    }
}

output {
    elasticsearch_http {
        host => "114.113.199.8"
    }
}
